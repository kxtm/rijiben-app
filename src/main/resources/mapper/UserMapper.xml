<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.rijiben.blog.data.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="app.rijiben.blog.data.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_account" jdbcType="VARCHAR" property="userAccount"/>
        <result column="user_passwd" jdbcType="VARCHAR" property="userPasswd"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_sex" jdbcType="INTEGER" property="userSex"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="user_token" jdbcType="VARCHAR" property="userToken"/>
        <result column="user_state" jdbcType="VARCHAR" property="userState"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
      id, user_account, user_passwd, user_name, user_sex, user_email, user_phone, user_token, user_state, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from t_user where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user  where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="app.rijiben.blog.data.entity.User">
    insert into t_user (id, user_account, user_passwd, user_name, user_sex, user_email, user_phone, user_token, user_state, create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{userAccount,jdbcType=VARCHAR}, #{userPasswd,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{userSex,jdbcType=INTEGER}, #{userEmail,jdbcType=VARCHAR},
      #{userPhone,jdbcType=VARCHAR}, #{userToken,jdbcType=VARCHAR}, #{userState,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="app.rijiben.blog.data.entity.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userAccount != null">
                user_account,
            </if>
            <if test="userPasswd != null">
                user_passwd,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="userToken != null">
                user_token,
            </if>
            <if test="userState != null">
                user_state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userAccount != null">
                #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="userPasswd != null">
                #{userPasswd,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=INTEGER},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userToken != null">
                #{userToken,jdbcType=VARCHAR},
            </if>
            <if test="userState != null">
                #{userState,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="app.rijiben.blog.data.entity.User">
        update t_user
        <set>
            <if test="userAccount != null">
                user_account = #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="userPasswd != null">
                user_passwd = #{userPasswd,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=INTEGER},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userToken != null">
                user_token = #{userToken,jdbcType=VARCHAR},
            </if>
            <if test="userState != null">
                user_state = #{userState,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="app.rijiben.blog.data.entity.User">
    update t_user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=INTEGER},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>